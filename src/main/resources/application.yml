server:
  port: 8989

spring:
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: YOUR_GITHUB_CLIENT_ID
            client-secret: YOUR_GITHUB_CLIENT_SECRET
            scope: user:email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-name: GitHub
          google:
            client-id: YOUR_GOOGLE_CLIENT_ID
            client-secret: YOUR_GOOGLE_CLIENT_SECRET
            scope: profile, email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-name: Google
          naver:
            client-id: YOUR_NAVER_CLIENT_ID
            client-secret: YOUR_NAVER_CLIENT_SECRET
            scope: name, email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-name: Naver
        provider:
          github:
            authorization-uri: https://github.com/login/oauth/authorize
            token-uri: https://github.com/login/oauth/access_token
            user-info-uri: https://api.github.com/user
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
  devtools:
    livereload:
      enabled: true
    restart:
      enabled: true
    thymeleaf:
      cache: false

  datasource:
    #mariadb는 자신이 사용하고자 하는 스키마를 입력해야지 들어가짐.
    url: jdbc:mariadb://localhost:3306/oauth2
    username: root
    password: 1234
    driver-class-name: org.mariadb.jdbc.Driver

  jpa:
    database-platform: org.hibernate.dialect.MariaDB103Dialect  #JPA가 사용할 database의 dialect 설정
    properties:
      hibernate:
        hibernate:
        "[format_sql]": true            #SQL을 보기 좋게 출력
        "[user_sql_comments]": true     #SQL생성 시 주석 포함
        "[highlight_sql]": true         #SQL에 색깔
        "[hbm2ddl.auto]": update
        #"[implicit_naming_strategy]": "org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy" -> 기본값으로 설정되어 있어서 따로 설정하지 않아도 무방함
    open-in-view: false
    show-sql: true



